#!/bin/bash

set -e

STATE="$1"
FILES="$2"

prev_files_tar="$FILES"/tmp/prev_files.tar
tmp_dest_dir="$FILES"/tmp/tmp_dest_dir
update_files_tar="$FILES"/files/update.tar
dest_dir_file="$FILES"/files/dest_dir
single_file_file="$FILES"/files/single_file

case "$STATE" in

    NeedsArtifactReboot)
        echo "No"
    ;;

    SupportsRollback)
        echo "Yes"
    ;;

    ArtifactInstall)
        dest_dir=$(cat $dest_dir_file)
        single_file=$(cat $single_file_file)
        test -z "$dest_dir" -o -z "$single_file" && \
        echo "Fatal error: dest_dir or single_file are undefined." && exit 1
        mkdir -p $dest_dir
        if [ $single_file == "true" ]; then
            mkdir -p $tmp_dest_dir
            filename=$(tar -tf ${update_files_tar})
            [[ -f ${dest_dir}/${filename} ]] && tar -cf ${prev_files_tar} -C ${dest_dir} ${filename}
        else
            test "$dest_dir" == "/" && \
            echo "Error: destination dir is '/', install not supported." && exit 1
            tar -cf ${prev_files_tar} -C ${dest_dir} .
            rm -rf ${dest_dir}
            mkdir -p ${dest_dir}
        fi
        tar -xf ${update_files_tar} -C ${dest_dir}
        ;;

    ArtifactRollback)
        dest_dir=$(cat $dest_dir_file)
        single_file=$(cat $single_file_file)
        test -z "$dest_dir" -o -z "$single_file" && \
        echo "Fatal error: dest_dir or single_file are undefined." && exit 1
        if [ $single_file == "true" ]; then
            filename=$(tar -tf ${update_files_tar})
            rm ${dest_dir}/${filename}
        else
            test "$dest_dir" == "/" && \
            echo "Info: destination dir is '/', not performing rollback." && exit 0
            rm -rf ${dest_dir}
            mkdir -p ${dest_dir}
        fi
        [[ -f $prev_files_tar ]] || exit 0
        tar -xf ${prev_files_tar} -C ${dest_dir}
        ;;
esac

exit 0

